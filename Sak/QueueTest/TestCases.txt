
// inc 
// 	message capacity (message count)
//	min message size in bytes (for testing)
//	max message size in bytes
// 	num messages to send (for testing)

queue inc 1 1 1 10

sak queue inc Lines	MinSize	MaxSize	Number
			
sak queue inc 2 1 1 10000
sak queue inc 3 1 1 10000
sak queue inc 3 1 2 10000
sak queue inc 3 2 2 10000
sak queue inc 4 1 1 10000
sak queue inc 4 1 2 10000
sak queue inc 4 1 3 10000
sak queue inc 4 2 2 10000
sak queue inc 4 2 3 10000
sak queue inc 4 3 3 10000

sak queue inc 50 1 1 10000
sak queue inc 50 1 2 10000
sak queue inc 50 1 3 10000
sak queue inc 50 2 2 10000
sak queue inc 50 2 3 10000
sak queue inc 50 3 3 10000
sak queue inc 50 7 7 10000
sak queue inc 50 25 25 10000
sak queue inc 50 49 49 10000
sak queue inc 50 1 49 10000
   
50000 1 1 5000000
50000 1 2 5000000
50000 1 3 5000000
50000 2 2 5000000
50000 2 3 5000000
50000 3 3 5000000
50000 17 33 5000000
50000 348 512 5000000
50000 1024 1024 5000000
50000 7389 17349 5000000


WB test (readLines): Writer fills queue and start spinning before reader starts to read.


Data correctness tests:
Use UniformGenerator to generate packet sizes, and payloads.
- Small queue, small max packet sizes.
- Large queue, small max packet sizes.
- Large queue, large max packet sizes.
- Large queue, only large max packet sizes.



Timing correctness tests:
Add UniformGenerator based delays. Just spin to avoid OS interactions?
- Reader spins a lot more than the writer
- Writer spins a log more than the reader



